
void pR(inout vec2 p, float a) {
	p = cos(a)*p + sin(a)*vec2(p.y, -p.x);
}

float de(vec3 p){
    const int iterations = 20;
    float d = -2.; // vary this parameter, range is like -20 to 20
    p=p.yxz;
    pR(p.yz, 1.570795);
    p.x += 6.5;
    p.yz = mod(abs(p.yz)-.0, 20.) - 10.;
    float scale = 1.25;
    p.xy /= (1.+d*d*0.0005);

    float l = 0.;
    for (int i=0; i < iterations; i++) {
        p.xy = abs(p.xy);
        p = p*scale + vec3(-3. + d*0.0095,-1.5,-.5);
        pR(p.xy,0.35-d*0.015);
        pR(p.yz,0.5+d*0.02);
        vec3 p6 = p*p*p; p6=p6*p6;
        l =pow(p6.x + p6.y + p6.z, 1./6.);
    }
    return l*pow(scale, -float(iterations))-.15;
}

irec is_inside(){  // check Documentation tab for details 

 irec temp;
 myloc *= 24.;

 temp.draw  = false;   // is this voxel's value going to change?
 temp.color = vec4(0); // what should its color be?
 temp.mask  = 0;       // how much do you wish to mask?
 
 if(de(myloc) <= 0.){
 	temp.draw = true;
 	temp.color = vec4(1,1,1,0.68);
 	}

 return temp;

}
